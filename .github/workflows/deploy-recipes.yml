# .github/workflows/deploy-recipes.yml
name: Deploy Static Recipe Site

on:
  push:
    branches:
        - main
        - feature/gh-page-builder
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Repository auschecken
      - name: Checkout
        uses: actions/checkout@v4

 # 1. DEBUG: Zeige Repo-Struktur
      - name: Debug - Show repository structure
        run: |
          echo "=== Repository Structure ==="
          ls -la
          echo ""
          echo "=== Recipes Directory ==="
          if [ -d "recipes" ]; then
            ls -la recipes/ | head -20
            echo "Found $(find recipes -name "*.cook" | wc -l) .cook files"
          else
            echo "ERROR: recipes/ directory not found!"
            echo "Available directories:"
            ls -la
          fi



      - name: Install HTTrack
        run: |
          echo "=== Installing HTTrack ==="
          sudo apt-get update -qq
          sudo apt-get install -y -qq httrack
          echo "✓ HTTrack installed"
          httrack --version


      # 2. CookCLI installieren
      - name: Install CookCLI
        run: |
          wget https://github.com/cooklang/cookcli/releases/latest/download/cook-x86_64-unknown-linux-musl.tar.gz
          tar -xzf cook-*.tar.gz
          chmod +x cook
          sudo mv cook /usr/local/bin/
          rm cook-x86_64-unknown-linux-musl.tar.gz

      # 3. Server im Hintergrund starten
      - name: Start Cook Server
        run: |
          ls -al
          /usr/local/bin/cook server . --host --port 9080 &
          echo $! > server.pid
          # Warte bis Server bereit
          timeout 30 sh -c 'until curl -f http://localhost:9080; do sleep 1; done'

      # 4. Website mit wget spiegeln
      #- name: Mirror Website with wget
      #  run: |
      #    wget --mirror \
      #         --convert-links \
      #         --adjust-extension \
      #         --page-requisites \
      #         --no-parent \
      #         --no-host-directories \
      #         --directory-prefix=./dist \
      #         http://localhost:9080

      - name: Mirror Website with HTTrack
        run: |
            echo "=== Starting Website Mirror with HTTrack ==="
            mkdir -p dist

            httrack \
            -O "./dist" \
            -w \
            -r9 \
            -c8 \
            -T120 \
            -I0 \
            --robots=0 \
            "http://localhost:9080/*" \
            2>&1 | tee httrack.log

            HTTRACK_EXIT=$?
            echo ""
            echo "=== HTTrack Exit Code: $HTTRACK_EXIT ==="

            # Exit codes 0-2 sind OK
            if [ $HTTRACK_EXIT -gt 2 ]; then
            echo "❌ HTTrack failed with exit code $HTTRACK_EXIT"
            exit 1
            fi

            echo "✓ HTTrack completed successfully"

      # 5. Server stoppen
      - name: Stop Server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
          fi

      - name: Check generated files
        run: |
          echo "=== Checking generated files ==="
          echo "Total files:"
          find dist -type f | wc -l

          echo ""
          echo "File structure:"
          find dist -type d | head -20

          echo ""
          echo "Disk usage:"
          du -sh dist/

          echo ""
          echo "Sample files:"
          find dist -type f -name "*.html" | head -5


      # 6. Zu GitHub Pages deployen
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          #cname: derphilipp.github.io/rezepte  # Optional: Custom Domain
